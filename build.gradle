plugins {
    id 'java'
    id 'idea'
    id 'jacoco'
    id 'org.springframework.boot' version '3.5.7'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'json-fetcher'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(25)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation "io.github.resilience4j:resilience4j-spring-boot3:${resilence4JVersion}"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${openapiVersion}"

    testImplementation "net.javacrumbs.json-unit:json-unit-assertj:${assertJVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

apply from: 'gradle/componentTest.gradle'
apply from: 'gradle/integrationTest.gradle'

jacoco {
    toolVersion = "${jacocoVersion}"
}

jacocoTestReport {
  getExecutionData().setFrom(fileTree(layout.buildDirectory).include("/jacoco/*.exec"))
}